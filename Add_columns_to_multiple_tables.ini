#Add_columns_to_multiple_tables.ini
"""Add_columns_to_multiple_tables

Revision ID: 1234567890
Revises: 
Create Date: 2022-01-01 12:00:00

"""

from alembic import op
import sqlalchemy as sa


# Не забудьте импортировать ваши модели из models.py


# Этот блок изменений добавляет новые колонки к таблице Product
def upgrade_product():
    op.add_column('products', sa.Column('article', sa.String, unique=True, index=True))
    op.add_column('products', sa.Column('description', sa.String))  # Пример добавления еще одной колонки

# Этот блок изменений добавляет новые колонки к таблице User
def upgrade_user():
    op.add_column('users', sa.Column('new_column', sa.String))  # Пример добавления новой колонки

# Этот блок изменений добавляет новые таблицы и колонки к существующим таблицам
def upgrade():
    # Применяем изменения к таблице Product
    upgrade_product()

    # Применяем изменения к таблице User
    upgrade_user()

    # Добавляем новые таблицы, если это необходимо
    op.create_table(
        'items',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('name', sa.String, nullable=False),
        sa.Column('description', sa.String),
        sa.Column('created_at', sa.DateTime, default=sa.func.now())
    )

    op.create_table(
        'request_history',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('user_id', sa.Integer),
        sa.Column('timestamp', sa.DateTime, default=sa.func.now()),
        sa.Column('product_article', sa.String)
    )


# Обратное изменение (downgrade) может быть необходимо, если вы захотите откатить миграцию
def downgrade():
    # Для обратного изменения, удаляем добавленные таблицы и колонки
    op.drop_table('items')
    op.drop_table('request_history')

    # Обратное изменение для Product
    op.drop_column('products', 'article')
    op.drop_column('products', 'description')  # Удаляем добавленную колонку

    # Обратное изменение для User
    op.drop_column('users', 'new_column')
